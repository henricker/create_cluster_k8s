apiVersion: apps/v1
kind: Deployment # Unique difference among pod, replicaSet and deployment is kind :D
metadata:
  name: goserver
  labels: 
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver # services and others will use this label to find the pods
  replicas: 1 # => number of pods replicas
  template: # => template of pod (similar to pod.yml)
    metadata:
      labels:
        app: goserver
    spec:
      containers:
        - name: "goserver"
          image: "henricker/hello-go"
          startupProbe:
            httpGet:
              path: /healthz
              port: 80
            failureThreshold: 30
            periodSeconds: 3
      
          readinessProbe: # => check if the pod is ready to receive traffic
            httpGet:
              path: /healthz
              port: 80
            periodSeconds: 3
            failureThreshold: 1
            timeoutSeconds: 1
            initialDelaySeconds: 10
          livenessProbe: # Check if pod is alive, if not, restart it
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 5
            failureThreshold: 1 # => number of times to check if the pod is alive
            timeoutSeconds: 1 # => time to wait for the pod to respond
            successThreshold: 1 # => number of times to check if the pod is alive
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits:
              cpu: 150m
              memory: 300Mi
          volumeMounts: 
            - name: "goserver-family"
              mountPath: "/go/myfamily"
              readOnly: true
          envFrom:  # load all keys by config map
            - configMapRef:
                name: goserver-env
            - secretRef: 
                name: goserver-secret # => secret is a type of config map, but it is used to store sensitive data with base64 encoding

        
      volumes: # create a volume to share data between containers
        - name: "goserver-family"
          configMap:
            name: goserver-family-env 
            items: 
              - key: members
                path: members.txt

              
             

# Now we can create various pods with the same template,
# And if version image changed in template, the deployment will update the pods
